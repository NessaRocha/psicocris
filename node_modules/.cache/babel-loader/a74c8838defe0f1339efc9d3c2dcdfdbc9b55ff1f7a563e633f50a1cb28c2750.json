{"ast":null,"code":"var _jsxFileName = \"C:\\\\PSICOCRIS\\\\src\\\\components\\\\Navbar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Button, Box, IconButton, Drawer, List, ListItem, ListItemButton, ListItemText, useScrollTrigger } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { styled } from '@mui/material/styles';\nimport logoCris from '../assets/logoCris.svg';\n\n// Styled AppBar com prop interna $elevate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAppBar = styled(AppBar, {\n  shouldForwardProp: prop => prop !== 'scrolled'\n})(({\n  theme,\n  scrolled\n}) => ({\n  backgroundColor: scrolled ? '#566542' : 'transparent',\n  boxShadow: scrolled ? theme.shadows[4] : 'none',\n  transition: 'background-color 0.3s, box-shadow 0.3s'\n}));\n_c = StyledAppBar;\nconst NavButton = styled(Button)(({\n  theme\n}) => ({\n  color: 'white',\n  margin: '0 10px',\n  '&:hover': {\n    backgroundColor: '#1B5E20'\n  },\n  fontWeight: 500,\n  letterSpacing: 1\n}));\n_c2 = NavButton;\nconst Logo = styled('img')({\n  height: 56,\n  marginRight: 32,\n  marginLeft: 16\n});\n_c3 = Logo;\nconst navLinks = [{\n  label: 'Início',\n  href: '#home'\n}, {\n  label: 'Serviços',\n  href: '#services'\n}, {\n  label: 'Sobre',\n  href: '#about'\n}, {\n  label: 'Contato',\n  href: '#contact'\n}];\nconst Navbar = () => {\n  _s();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 40\n  });\n  return /*#__PURE__*/_jsxDEV(StyledAppBar, {\n    position: \"fixed\",\n    scrolled: trigger,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        src: logoCris,\n        alt: \"Logo PsicoCris\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: {\n            xs: 'none',\n            md: 'flex'\n          },\n          alignItems: 'center'\n        },\n        children: navLinks.map(item => /*#__PURE__*/_jsxDEV(NavButton, {\n          href: item.href,\n          children: item.label\n        }, item.href, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: {\n            xs: 'flex',\n            md: 'none'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: () => setDrawerOpen(true),\n          sx: {\n            ml: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          anchor: \"right\",\n          open: drawerOpen,\n          onClose: () => setDrawerOpen(false),\n          PaperProps: {\n            sx: {\n              backgroundColor: '#566542',\n              color: 'white'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              width: 220\n            },\n            children: navLinks.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              disablePadding: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                component: \"a\",\n                href: item.href,\n                onClick: () => setDrawerOpen(false),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: item.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, item.href, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"c1YNympn84uOticzFFpqGwaOxu8=\", false, function () {\n  return [useScrollTrigger];\n});\n_c4 = Navbar;\nexport default Navbar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledAppBar\");\n$RefreshReg$(_c2, \"NavButton\");\n$RefreshReg$(_c3, \"Logo\");\n$RefreshReg$(_c4, \"Navbar\");","map":{"version":3,"names":["React","useState","AppBar","Toolbar","Button","Box","IconButton","Drawer","List","ListItem","ListItemButton","ListItemText","useScrollTrigger","MenuIcon","styled","logoCris","jsxDEV","_jsxDEV","StyledAppBar","shouldForwardProp","prop","theme","scrolled","backgroundColor","boxShadow","shadows","transition","_c","NavButton","color","margin","fontWeight","letterSpacing","_c2","Logo","height","marginRight","marginLeft","_c3","navLinks","label","href","Navbar","_s","drawerOpen","setDrawerOpen","trigger","disableHysteresis","threshold","position","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","display","xs","md","alignItems","map","item","edge","onClick","ml","anchor","open","onClose","PaperProps","width","disablePadding","component","primary","_c4","$RefreshReg$"],"sources":["C:/PSICOCRIS/src/components/Navbar.tsx"],"sourcesContent":["import React, { useState, ReactNode } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  useScrollTrigger\r\n} from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { styled } from '@mui/material/styles';\r\nimport logoCris from '../assets/logoCris.svg';\r\n\r\n// Styled AppBar com prop interna $elevate\r\nconst StyledAppBar = styled(AppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'scrolled',\r\n})<{\r\n  scrolled?: boolean;\r\n}>(({ theme, scrolled }) => ({\r\n  backgroundColor: scrolled ? '#566542' : 'transparent',\r\n  boxShadow: scrolled ? theme.shadows[4] : 'none',\r\n  transition: 'background-color 0.3s, box-shadow 0.3s',\r\n}));\r\n\r\nconst NavButton = styled(Button)(({ theme }) => ({\r\n  color: 'white',\r\n  margin: '0 10px',\r\n  '&:hover': {\r\n    backgroundColor: '#1B5E20',\r\n  },\r\n  fontWeight: 500,\r\n  letterSpacing: 1,\r\n}));\r\n\r\nconst Logo = styled('img')({\r\n  height: 56,\r\n  marginRight: 32,\r\n  marginLeft: 16,\r\n});\r\n\r\nconst navLinks = [\r\n  { label: 'Início', href: '#home' },\r\n  { label: 'Serviços', href: '#services' },\r\n  { label: 'Sobre', href: '#about' },\r\n  { label: 'Contato', href: '#contact' },\r\n];\r\n\r\nconst Navbar = () => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const trigger = useScrollTrigger({ disableHysteresis: true, threshold: 40 });\r\n\r\n  return (\r\n    <StyledAppBar position=\"fixed\" scrolled={trigger}>\r\n      <Toolbar>\r\n        <Logo src={logoCris} alt=\"Logo PsicoCris\" />\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        {/* Menu Desktop */}\r\n        <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center' }}>\r\n          {navLinks.map((item) => (\r\n            <NavButton key={item.href} href={item.href}>{item.label}</NavButton>\r\n          ))}\r\n        </Box>\r\n        {/* Menu Mobile */}\r\n        <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\r\n          <IconButton\r\n            edge=\"end\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setDrawerOpen(true)}\r\n            sx={{ ml: 1 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={drawerOpen}\r\n            onClose={() => setDrawerOpen(false)}\r\n            PaperProps={{ sx: { backgroundColor: '#566542', color: 'white' } }}\r\n          >\r\n            <List sx={{ width: 220 }}>\r\n              {navLinks.map((item) => (\r\n                <ListItem key={item.href} disablePadding>\r\n                  <ListItemButton component=\"a\" href={item.href} onClick={() => setDrawerOpen(false)}>\r\n                    <ListItemText primary={item.label} />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Drawer>\r\n        </Box>\r\n      </Toolbar>\r\n    </StyledAppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,SACEC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,GAAG,EACHC,UAAU,EACVC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,cAAc,EACdC,YAAY,EACZC,gBAAgB,QACX,eAAe;AACtB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGJ,MAAM,CAACZ,MAAM,EAAE;EAClCiB,iBAAiB,EAAGC,IAAI,IAAKA,IAAI,KAAK;AACxC,CAAC,CAAC,CAEC,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,MAAM;EAC3BC,eAAe,EAAED,QAAQ,GAAG,SAAS,GAAG,aAAa;EACrDE,SAAS,EAAEF,QAAQ,GAAGD,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM;EAC/CC,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;AAACC,EAAA,GARET,YAAY;AAUlB,MAAMU,SAAS,GAAGd,MAAM,CAACV,MAAM,CAAC,CAAC,CAAC;EAAEiB;AAAM,CAAC,MAAM;EAC/CQ,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,QAAQ;EAChB,SAAS,EAAE;IACTP,eAAe,EAAE;EACnB,CAAC;EACDQ,UAAU,EAAE,GAAG;EACfC,aAAa,EAAE;AACjB,CAAC,CAAC,CAAC;AAACC,GAAA,GAREL,SAAS;AAUf,MAAMM,IAAI,GAAGpB,MAAM,CAAC,KAAK,CAAC,CAAC;EACzBqB,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,EAAE;EACfC,UAAU,EAAE;AACd,CAAC,CAAC;AAACC,GAAA,GAJGJ,IAAI;AAMV,MAAMK,QAAQ,GAAG,CACf;EAAEC,KAAK,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAClC;EAAED,KAAK,EAAE,UAAU;EAAEC,IAAI,EAAE;AAAY,CAAC,EACxC;EAAED,KAAK,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAS,CAAC,EAClC;EAAED,KAAK,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAW,CAAC,CACvC;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM6C,OAAO,GAAGlC,gBAAgB,CAAC;IAAEmC,iBAAiB,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC;EAE5E,oBACE/B,OAAA,CAACC,YAAY;IAAC+B,QAAQ,EAAC,OAAO;IAAC3B,QAAQ,EAAEwB,OAAQ;IAAAI,QAAA,eAC/CjC,OAAA,CAACd,OAAO;MAAA+C,QAAA,gBACNjC,OAAA,CAACiB,IAAI;QAACiB,GAAG,EAAEpC,QAAS;QAACqC,GAAG,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CvC,OAAA,CAACZ,GAAG;QAACoD,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAE;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE5BvC,OAAA,CAACZ,GAAG;QAACoD,EAAE,EAAE;UAAEE,OAAO,EAAE;YAAEC,EAAE,EAAE,MAAM;YAAEC,EAAE,EAAE;UAAO,CAAC;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAZ,QAAA,EACpEX,QAAQ,CAACwB,GAAG,CAAEC,IAAI,iBACjB/C,OAAA,CAACW,SAAS;UAAiBa,IAAI,EAAEuB,IAAI,CAACvB,IAAK;UAAAS,QAAA,EAAEc,IAAI,CAACxB;QAAK,GAAvCwB,IAAI,CAACvB,IAAI;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA0C,CACpE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENvC,OAAA,CAACZ,GAAG;QAACoD,EAAE,EAAE;UAAEE,OAAO,EAAE;YAAEC,EAAE,EAAE,MAAM;YAAEC,EAAE,EAAE;UAAO;QAAE,CAAE;QAAAX,QAAA,gBAC/CjC,OAAA,CAACX,UAAU;UACT2D,IAAI,EAAC,KAAK;UACVpC,KAAK,EAAC,SAAS;UACf,cAAW,MAAM;UACjBqC,OAAO,EAAEA,CAAA,KAAMrB,aAAa,CAAC,IAAI,CAAE;UACnCY,EAAE,EAAE;YAAEU,EAAE,EAAE;UAAE,CAAE;UAAAjB,QAAA,eAEdjC,OAAA,CAACJ,QAAQ;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACbvC,OAAA,CAACV,MAAM;UACL6D,MAAM,EAAC,OAAO;UACdC,IAAI,EAAEzB,UAAW;UACjB0B,OAAO,EAAEA,CAAA,KAAMzB,aAAa,CAAC,KAAK,CAAE;UACpC0B,UAAU,EAAE;YAAEd,EAAE,EAAE;cAAElC,eAAe,EAAE,SAAS;cAAEM,KAAK,EAAE;YAAQ;UAAE,CAAE;UAAAqB,QAAA,eAEnEjC,OAAA,CAACT,IAAI;YAACiD,EAAE,EAAE;cAAEe,KAAK,EAAE;YAAI,CAAE;YAAAtB,QAAA,EACtBX,QAAQ,CAACwB,GAAG,CAAEC,IAAI,iBACjB/C,OAAA,CAACR,QAAQ;cAAiBgE,cAAc;cAAAvB,QAAA,eACtCjC,OAAA,CAACP,cAAc;gBAACgE,SAAS,EAAC,GAAG;gBAACjC,IAAI,EAAEuB,IAAI,CAACvB,IAAK;gBAACyB,OAAO,EAAEA,CAAA,KAAMrB,aAAa,CAAC,KAAK,CAAE;gBAAAK,QAAA,eACjFjC,OAAA,CAACN,YAAY;kBAACgE,OAAO,EAAEX,IAAI,CAACxB;gBAAM;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvB;YAAC,GAHJQ,IAAI,CAACvB,IAAI;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAId,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEnB,CAAC;AAACb,EAAA,CA9CID,MAAM;EAAA,QAEM9B,gBAAgB;AAAA;AAAAgE,GAAA,GAF5BlC,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAf,EAAA,EAAAM,GAAA,EAAAK,GAAA,EAAAsC,GAAA;AAAAC,YAAA,CAAAlD,EAAA;AAAAkD,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAAvC,GAAA;AAAAuC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}